#!/usr/bin/env /usr/bin/python3

import sys
import textwrap
from itertools import tee
import yaml

from deployment import deployment
from virt_service import virt_service
from service import service
from database import database

with open(sys.argv[1], 'r') as stream:
    try:
        cfg = yaml.safe_load(stream)
    except yaml.YAMLError as exc:
        print("Error parsing ApiGenerator input (%s)", file=sys.stderr)
        sys.exit(1)

if len(cfg['versions'][0]) == 0:
    cfg['versions'][0] = 'all'

deployment = yaml.load(deployment.format(cfg=cfg))
virt_service = yaml.load(virt_service.format(cfg=cfg))
service = yaml.load(service.format(cfg=cfg))
for version in cfg['versions']:
    if version == "all":
        match = { 'uri' : { 'prefix': f"/{cfg['name']}" } }
    else:
        match = { 'uri' : { 'prefix': f"/{version}/{cfg['name']}" } }
    virt_service['spec']['http'][0]['match'].append( match )

deployment['spec']['template']['spec']['containers'][0]['env'] = cfg['env']

print("---")
print(yaml.dump(deployment, default_flow_style=False))

print("---")
print(yaml.dump(virt_service, default_flow_style=False))

print("---")
print(yaml.dump(service, default_flow_style=False))

if "db" in cfg:
    database = yaml.load(database.format(cfg=cfg))
    print("---")
    print(yaml.dump(database, default_flow_style=False))
